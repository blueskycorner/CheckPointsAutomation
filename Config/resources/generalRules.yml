Resources:

  DetectTagNameRule:
    DependsOn: DetectTagRulePermission
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: ${self:service}-DetectTagNameRule
      Source:
        Owner: CUSTOM_LAMBDA
        SourceDetails:
        - EventSource: aws.config
          MessageType: ConfigurationItemChangeNotification
        - EventSource: aws.config
          MessageType: OversizedConfigurationItemChangeNotification
        SourceIdentifier: !GetAtt DetectTagRuleLambdaFunction.Arn
      Description: 'Ensures a tag Name is provided and is not empty'
      InputParameters: '{"tagLabel":"Name"}'
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::SecurityGroup
        - AWS::EC2::Instance
        - AWS::EC2::Volume

  DetectTagEnvironmentRule:
    DependsOn: DetectTagRulePermission
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: ${self:service}-DetectTagEnvironmentRule
      Source:
        Owner: CUSTOM_LAMBDA
        SourceDetails:
        - EventSource: aws.config
          MessageType: ConfigurationItemChangeNotification
        - EventSource: aws.config
          MessageType: OversizedConfigurationItemChangeNotification
        SourceIdentifier: !GetAtt DetectTagRuleLambdaFunction.Arn
      Description: 'Ensures a tag Name is provided and is not empty'
      InputParameters: '{"tagLabel":"environment"}'
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::SecurityGroup
        - AWS::EC2::Instance
        - AWS::EC2::Volume

  DetectTagCriticalityRule:
    DependsOn: DetectTagRulePermission
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: ${self:service}-DetectTagCriticalityRule
      Source:
        Owner: CUSTOM_LAMBDA
        SourceDetails:
        - EventSource: aws.config
          MessageType: ConfigurationItemChangeNotification
        - EventSource: aws.config
          MessageType: OversizedConfigurationItemChangeNotification
        SourceIdentifier: !GetAtt DetectTagRuleLambdaFunction.Arn
      Description: 'Ensures a tag Name is provided and is not empty'
      InputParameters: '{"tagLabel":"criticality"}'
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::SecurityGroup
        - AWS::EC2::Instance
        - AWS::EC2::Volume

  # Auto shut down is only applied to EC2 and RDS instances
  DetectTagAutoShutDownScheduleRule:
    DependsOn: DetectTagRulePermission
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: ${self:service}-DetectTagAutoShutDownScheduleRule
      Source:
        Owner: CUSTOM_LAMBDA
        SourceDetails:
        - EventSource: aws.config
          MessageType: ConfigurationItemChangeNotification
        - EventSource: aws.config
          MessageType: OversizedConfigurationItemChangeNotification
        SourceIdentifier: !GetAtt DetectTagRuleLambdaFunction.Arn
      Description: 'Ensures a tag Name is provided and is not empty'
      InputParameters: '{"tagLabel":"autoshutdowndchedule"}'
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::Instance
        - AWS::RDS::DBInstance

  DetectTagOwnerRule:
    DependsOn: DetectTagRulePermission
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: ${self:service}-DetectTagOwnerRule
      Source:
        Owner: CUSTOM_LAMBDA
        SourceDetails:
        - EventSource: aws.config
          MessageType: ConfigurationItemChangeNotification
        - EventSource: aws.config
          MessageType: OversizedConfigurationItemChangeNotification
        SourceIdentifier: !GetAtt DetectTagRuleLambdaFunction.Arn
      Description: 'Ensures a tag Name is provided and is not empty'
      InputParameters: '{"tagLabel":"owner"}'
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::SecurityGroup
        - AWS::EC2::Instance
        - AWS::EC2::Volume

  DetectTagAppNameRule:
    DependsOn: DetectTagRulePermission
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: ${self:service}-DetectTagAppNameRule
      Source:
        Owner: CUSTOM_LAMBDA
        SourceDetails:
        - EventSource: aws.config
          MessageType: ConfigurationItemChangeNotification
        - EventSource: aws.config
          MessageType: OversizedConfigurationItemChangeNotification
        SourceIdentifier: !GetAtt DetectTagRuleLambdaFunction.Arn
      Description: 'Ensures a tag Name is provided and is not empty'
      InputParameters: '{"tagLabel":"app-name"}'
      Scope:
        ComplianceResourceTypes:
        - AWS::RDS::DBInstance
        - AWS::RDS::DBSecurityGroup
        # - AWS::RDS::DBSnapshot
        - AWS::RDS::DBSubnetGroup
        # - AWS::RDS::EventSubscription

  DetectTagAtemiIdRule:
    DependsOn: DetectTagRulePermission
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: ${self:service}-DetectTagAtemiIdRule
      Source:
        Owner: CUSTOM_LAMBDA
        SourceDetails:
        - EventSource: aws.config
          MessageType: ConfigurationItemChangeNotification
        - EventSource: aws.config
          MessageType: OversizedConfigurationItemChangeNotification
        SourceIdentifier: !GetAtt DetectTagRuleLambdaFunction.Arn
      Description: 'Ensures a tag Name is provided and is not empty'
      InputParameters: '{"tagLabel":"atemi-id"}'
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::SecurityGroup
        - AWS::EC2::Instance
        - AWS::EC2::Volume
        
  # To allow aws.config to call DetectTagRule
  DetectTagRulePermission:
    # DependsOn: ConfigRecorder
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt DetectTagRuleLambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: config.amazonaws.com
        
  # Basic role witch allows to write in config and cloudwatch
  ConfigBaseRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:service}-BaseRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSConfigRulesExecutionRole
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole